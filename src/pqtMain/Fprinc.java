package pqtMain;

import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import pqtGestPlugins.PluginFinder;
import pqtGestReadWrite.OpenFile;
import pqtGestReadWrite.SaveFile;
import pqtGestReadWrite.Navigate;

/**
 *
 * @author Guillaume Floran Axel 
 */
public class Fprinc extends javax.swing.JFrame {

    PluginFinder objFinder;
    Boolean fileIsSaving;
    String cannonicalPath;

    /**
     * Creates new form Fprinc the first page who as lunch in beginning
     */
    public Fprinc() {
        initComponents();

        objFinder = new PluginFinder("./build/dropins",".class",MenuOutils, txtArea);
        fileIsSaving = false;
        cannonicalPath = "";
        
        TimerTask task = new TimerTask() {
            @Override
            public void run() {
                objFinder.LookForNewPlugIn();
                objFinder.LookForDeletingPlugIn();
            }
        };

        Timer timer = new Timer();
        timer.scheduleAtFixedRate(task, 0, 1000);
    }
    /**
     * for save the file and chosse the directory
     * @throws IOException 
     */
    private void saveAsMenu() throws IOException{
        Navigate objNavigate = new Navigate();
        //surement une erreur ici
        cannonicalPath= objNavigate.NavigateInFinderDirectory();
        if(cannonicalPath != ""){
            SaveFile objSaveFile = new SaveFile();
            objSaveFile.save(txtArea.getText(),cannonicalPath);
            fileIsSaving = true;
        }
    }
    /**
     * for save the file and the directrory using with the first save as
     */
    private void saveMenu(){
        if(fileIsSaving == true){
            SaveFile objSave = new SaveFile();
            objSave.save(txtArea.getText(), cannonicalPath);
        }else{
            try {
                saveAsMenu();
            } catch (IOException ex) {
                Logger.getLogger(Fprinc.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        MenuBar = new javax.swing.JMenuBar();
        MenuFichier = new javax.swing.JMenu();
        MenuItemNouveau = new javax.swing.JMenuItem();
        menuItemOuvrir = new javax.swing.JMenuItem();
        menuItemEnregistrerSous = new javax.swing.JMenuItem();
        MenuItemEnrigistrer = new javax.swing.JMenuItem();
        MenuOutils = new javax.swing.JMenu();
        MenuAide = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bloc Notes IRIS");

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        MenuFichier.setText("Fichier");

        MenuItemNouveau.setText("Nouveau");
        MenuItemNouveau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuItemNouveauMouseClicked(evt);
            }
        });
        MenuItemNouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemNouveauActionPerformed(evt);
            }
        });
        MenuFichier.add(MenuItemNouveau);

        menuItemOuvrir.setText("Ouvrir");
        menuItemOuvrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuItemOuvrirMouseClicked(evt);
            }
        });
        menuItemOuvrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemOuvrirActionPerformed(evt);
            }
        });
        MenuFichier.add(menuItemOuvrir);

        menuItemEnregistrerSous.setText("Enregistrer sous");
        menuItemEnregistrerSous.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuItemEnregistrerSousMouseClicked(evt);
            }
        });
        menuItemEnregistrerSous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEnregistrerSousActionPerformed(evt);
            }
        });
        MenuFichier.add(menuItemEnregistrerSous);

        MenuItemEnrigistrer.setText("Enregistrer");
        MenuItemEnrigistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemEnrigistrerActionPerformed(evt);
            }
        });
        MenuFichier.add(MenuItemEnrigistrer);

        MenuBar.add(MenuFichier);

        MenuOutils.setText("Outils");
        MenuBar.add(MenuOutils);

        MenuAide.setText("Aide");
        MenuBar.add(MenuAide);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuItemNouveauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuItemNouveauMouseClicked
        
    }//GEN-LAST:event_MenuItemNouveauMouseClicked

    private void menuItemOuvrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuItemOuvrirMouseClicked
        
    }//GEN-LAST:event_menuItemOuvrirMouseClicked

    private void menuItemEnregistrerSousMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuItemEnregistrerSousMouseClicked
        
    }//GEN-LAST:event_menuItemEnregistrerSousMouseClicked

    private void MenuItemNouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemNouveauActionPerformed
        if(fileIsSaving == false){
            try {
                saveAsMenu();
            } catch (IOException ex) {
                Logger.getLogger(Fprinc.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        txtArea.setText("");
        fileIsSaving = false;
        cannonicalPath = "";
    }//GEN-LAST:event_MenuItemNouveauActionPerformed

    private void menuItemOuvrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemOuvrirActionPerformed
        String path = "";
        Navigate objNavigate = new Navigate();
        OpenFile objOpenFile = new OpenFile(txtArea);
        try {
            path = objNavigate.NavigateInFinderCannonical();
            objOpenFile.Open(path);
            cannonicalPath = path;
            fileIsSaving = true;
        } catch (IOException ex) {
            Logger.getLogger(Fprinc.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuItemOuvrirActionPerformed

    private void menuItemEnregistrerSousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEnregistrerSousActionPerformed
        try {
            saveAsMenu();
        } catch (IOException ex) {
            Logger.getLogger(Fprinc.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuItemEnregistrerSousActionPerformed

    private void MenuItemEnrigistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemEnrigistrerActionPerformed
        saveMenu();
    }//GEN-LAST:event_MenuItemEnrigistrerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fprinc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fprinc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fprinc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fprinc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fprinc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuAide;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenu MenuFichier;
    private javax.swing.JMenuItem MenuItemEnrigistrer;
    private javax.swing.JMenuItem MenuItemNouveau;
    private javax.swing.JMenu MenuOutils;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuItemEnregistrerSous;
    private javax.swing.JMenuItem menuItemOuvrir;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
